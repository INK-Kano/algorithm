

//    int n, m, k; cin >> n >> m >> k;
//    vector<int> price(n, 0);
//    for (int i = 0; i < n; i++) cin >> price[i];
//
//    vector<int> check(n, -1);
//    vector<vector<int>> group;
//    for (int i = 0; i < m; i++) {
//        int a, b; cin >> a >> b;
//        // 둘 다 어딘가에 연결되어있지 않으면 새로운 group생성
//        if (check[a - 1] == -1 and check[b - 1] == -1) {
//            vector<int> tmp = {a - 1, b - 1};
//            group.push_back(tmp);
//            check[a - 1] = group.size() - 1;
//            check[b - 1] = group.size() - 1;
//        }
//        // 둘중에 하나가 어딘가에 연결되어 있으면 그 vector에 연결되어있지 않은 나머지 원소 추가
//        else if (check[a - 1] == -1 and check[b - 1] != -1) {
//            group[check[b - 1]].push_back(a - 1);
//            check[a - 1] = check[b - 1];
//        }
//        else if (check[a - 1] != -1 and check[b - 1] == -1) {
//            group[check[a - 1]].push_back(b - 1);
//            check[b - 1] = check[a - 1];
//        }
//        // 둘 다 어딘가에 연결되어있으면 -> 같은 vector에 있다면 pass, 다은 vector에 있다면 두 vector 통합
//        else if (check[a - 1] != -1 and check[b - 1] != -1) {
//            if (check[a - 1] != check[b - 1]) {
//                vector<int> tmp = group[check[a - 1]];
//                for (int item : group[check[b - 1]]) {
//                    tmp.push_back(item);
//                }
//                group.push_back(tmp);
//
//                group.erase(group.begin() + (check[a - 1]));
//                for (int j = 0; j < check.size(); j++) {
//                    if (check[j] > check[a - 1]) check[j]--;
//                }
//                group.erase(group.begin() + (check[b - 1]));
//                for (int j = 0; j < check.size(); j++) {
//                    if (check[j] > check[b - 1]) check[j]--;
//                }
//                check[a - 1] = group.size() - 1;
//                check[b - 1] = group.size() - 1;
//            }
//        }
//    }
//
//    ll ans = 0;
//    for (auto item : group) {
//        ll minPrice = LLONG_MAX;
//        for (auto ele : item) {
//            if (minPrice > price[ele]) minPrice = price[ele];
//        }
//
//        ans += minPrice;
//    }
//
//    for (int i = 0; i < n; i++) {
//        if (check[i] == -1) {
//            ans += price[i];
//        }
//    }
//
//    if (ans > k) {
//        cout << "Oh no";
//        return 0;
//    }
//
//    cout << ans;